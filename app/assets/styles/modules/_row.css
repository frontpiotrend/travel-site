.row {
	
	@mixin clearfix;
	
	&--t-padding {
		padding-top: 80px;
	}
	
	
/* we need gutter between image and text, but we don't want gutter/margin on the right side; it was applied by 'padding-right: 65px' to each column; negative margin matching padding value; negative margin made row in general 65px wider than it should be -> in .wrapper.css overflow:hidden  */	
	&--gutters {
		margin-right: -65px;
	}
	
	&--gutters-large {
		margin-right: -100px;
	}
	
	&--gutters-small {
		margin-right: -45px;
	}
	
/* select all direct children of 'row'-div, in other words columns */
	&--gutters > div {
		padding-right: 65px;	
	}

	&--gutters-large > div {
		padding-right: 100px;	
	}
	
	&--gutters-small > div {
		padding-right: 45px;
	}
	
	&__b-margin-until-medium {
		margin-bottom: 1rem;
	}
	
	
	@mixin atMedium {
		
		&__b-margin-until-medium {
			margin-bottom: 0;
		}
		
		&__medium-4 {
		float: left;
/* 100% divided by 12 column grid = 8.3333~ -> each of 12 grid bars is 8.3333%; we want 4 grids (1/3) for image: 4*8.3333 = 33.3333%; and 2/3 for text */		
		width: 33.33%; 
		}	
		
		&__medium-4--larger {
			width: 37%;
		}
		
		&__medium-6 {
			float: left;
			width: 50%;
		}
	
		&__medium-8 {
			float: left;
			width: 66.66%;
		}
		
		&__medium-8--smaller {
			width: 63%;
		}
	}
	
	@mixin atLarge {
		
		&__b-margin-until-large {
			margin-bottom: 0;
		}
		
		&__large-4 {
		float: left;		
		width: 33.33%; 
		}	
		
		&__large-4--larger {
			width: 37%;
		}
		
		&__large-6 {
			float: left;
			width: 50%;
		}
	
		&__large-8 {
			float: left;
			width: 66.66%;
		}
		
		&__large-8--smaller {
			width: 63%;
		}
	}
	
	/* Begin Equal Height Rules */
	&--equal-height-at-medium {
		@mixin atMedium {
			display: flex;
/* tell the parent .row-div to use flexbox */
		}
/* if we tell each of the column to use flexbox instead of being float to the left, the contents of each will flex to match the tallest element */	
		& > div {
			float: none;
			display: flex;
		}
	}

&--equal-height-at-large {
		@mixin atLarge {
			display: flex;
		}
	
		& > div {
			float: none;
			display: flex;
		}
	}
}